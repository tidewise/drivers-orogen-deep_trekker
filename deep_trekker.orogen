name "deep_trekker"

using_library "deep_trekker"

import_types_from "deep_trekkerTypes.hpp"
import_types_from "deep_trekker/DeepTrekkerCommands.hpp"
import_types_from "deep_trekker/DeepTrekkerStates.hpp"
import_types_from "iodrivers_base"
import_types_from "base"

task_context "RevolutionTask" do
    needs_configuration

    # API version
    property "api_version", "std/string"
    # The model number of each device
    property "devices_model", "deep_trekker/DevicesModel"
    # The IDs of each device
    property "devices_id", "deep_trekker/DevicesID"
    # For how long an input will be repeated before timing out
    property "input_timeout", "base/Time"

    # Tilt camera head position/speed joint command
    input_port "tilt_camera_head_command", "base/samples/Joints"
    # Camera head laser, light and camera commands
    input_port "camera_head_command", "deep_trekker/CameraHeadCommand"
    # Grabber raw joint commands
    input_port "grabber_command", "base/samples/Joints"
    # Vehicle setpoint in local frame
    input_port "drive_command", "base/commands/LinearAngular6DCommand"
    # Vehicle setpoint in local frame
    input_port "drive_mode_command", "deep_trekker/DriveMode"
    # Vehicle light command
    input_port "light_command", "double"
    # Powered reel speed joint command
    input_port "powered_reel_command", "base/samples/Joints"
    # Rawdata in
    input_port "data_in", "iodrivers_base/RawPacket"

    # Rawdata out
    output_port "data_out", "iodrivers_base/RawPacket"
    # Revolution states
    output_port "camera_head_states", "deep_trekker/TiltCameraHead"
    # Revolution states
    output_port "camera_head_tilt_states", "base/samples/Joints"
    # Revolution states
    output_port "revolution_states", "deep_trekker/Revolution"
    # Revolution pose
    output_port "revolution_pose_z_attitude", "base/samples/RigidBodyState"
    # Revolution motor states
    output_port "revolution_motor_states", "base/samples/Joints"
    # Grabber motor states
    output_port "grabber_motor_states", "deep_trekker/Grabber"
    # Powered reel states
    output_port "powered_reel_states", "deep_trekker/PoweredReel"
    # Powered reel motor states
    output_port "powered_reel_motor_states", "base/samples/Joints"
    # Manual reel states
    output_port "manual_reel_states", "deep_trekker/ManualReel"

    periodic 0.005
end
